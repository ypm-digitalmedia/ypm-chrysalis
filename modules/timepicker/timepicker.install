<?php

/**
 * @file
 * Install, update and uninstall functions for the Date Timepicker module.
 */

/**
 * Implements hook_requirements().
 */
function timepicker_requirements($phase) {
  if ($phase != 'runtime') {
    return [];
  }

  // Checking depended libraries provided by hook_timepicker_libraries.
  $library_statuses = [];
  $timepicker_libraries = \Drupal::moduleHandler()
    ->invokeAll('timepicker_libraries');

  foreach ($timepicker_libraries as $timepicker) {
    $depended_library = $timepicker['depended library'];
    // Load library by extension and name.
    $library = \Drupal::service('library.discovery')->getLibraryByName(
      $depended_library['extension'],
      $depended_library['name']
    );
    $library_exists = TRUE;

    // Checking css files.
    foreach ($library['css'] as $library_css_file) {
      $library_exists = $library_exists && file_exists(
        DRUPAL_ROOT . '/' . $library_css_file['data']
      );
    }
    // Checking js files.
    foreach ($library['js'] as $library_js_file) {
      $library_exists = $library_exists && file_exists(
        DRUPAL_ROOT . '/' . $library_js_file['data']
      );
    }

    // Create a status item.
    $lib_status = $depended_library['extension'] . $depended_library['name'];
    $lib_status .= '_library_downloaded';

    $library_statuses[$lib_status] = [
      'title' => t('@name library', ['@name' => $timepicker['title']]),
      'value' => $library_exists ? t('Installed') : t('Not installed'),
      'description' => $library_exists ?
      t('Required by the Date Timepicker module.') :
      t(
        'The @title needs to be <a href="@url">downloaded</a> and extracted
        into the @path folder in your Drupal installation directory. Required
        by the Date Timepicker module.',
        [
          '@title' => $timepicker['title'],
          '@url' => $depended_library['download url'],
          '@path' => $depended_library['library path'],
        ]
      ),
      'severity' => $library_exists ? REQUIREMENT_OK : REQUIREMENT_ERROR,
    ];
  }

  return $library_statuses;
}
