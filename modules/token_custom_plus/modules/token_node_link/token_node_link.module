<?php

/**
 * @file
 * Hooks for Node Link Token module.
 */

use Drupal\Core\Render\BubbleableMetadata;
use Drupal\node\Entity\Node;

/**
 * Implements hook_token_info().
 */
function token_node_link_token_info() {
  // Adding to existng token type 'node'. It's provided by core so always there.
  $tokens['node']['link'] = [
    'name' => 'Link to a node',
    'description' => 'Use with arguments: [node:link{nid,title-override}]',
  ];
  return ['tokens' => $tokens];
}

/**
 * Implements hook_tokens().
 */
function token_node_link_tokens($type, $tokens, array $data, array $options, BubbleableMetadata $bubbleable_metadata) {

  if ($type !== 'node') {
    return [];
  }
  $replacements = [];
  foreach ($tokens as $token_name => $token_full_name) {

    $actual_args = token_custom_plus_explode_args($token_name);
    $actual_name = array_shift($actual_args);

    if ($actual_name == 'link') {
      if ($nid = reset($actual_args)) {
        $title = next($actual_args);
        if (!$title) {
          if ($node = Node::load($nid)) {
            $title = $node->getTitle();
          }
          if (!$title) {
            $title = '?';
          }
        }
        global $base_url;
        $link = "<a href='$base_url/node/$nid'>$title</a>";
        // The 'basic_html' filter allows the <a> tag.
        $replacements[$token_full_name] = check_markup($link, 'basic_html');
      }
    }
  }
  return $replacements;
}
